name: CI/CD for Dockerized Flask App  # Define the name of the workflow.

on:
  push:
    branches: [ main ]  # Trigger the workflow on push to the main branch.
  pull_request:
    branches: [ main ]  # Trigger the workflow on pull request to the main branch.
#  workflow_dispatch:  # This allows you to manually trigger the workflow

jobs:
  # Job for building the Docker image.
  dockerbuild:
    runs-on: ubuntu-latest  # Specify the runner environment.
    steps:
    - uses: actions/checkout@v4  # Checkout the code from the repository.
    - name: Build The Docker Image  # Name the step.
      run: docker build . --file DockerFile --tag workflow-test:$(date +%s)  # Build the Docker image with a timestamp tag.

  # Job for setting up Python, installing dependencies, and running tests.
  build-and-test:
    runs-on: ubuntu-latest  # Specify the runner environment.

    steps:
    - name: Checkout code  # Checkout the code from the repository.
      uses: actions/checkout@v3  # Action for checking out code.
      
    - name: Set up Python  # Set up Python environment.
      uses: actions/setup-python@v4  # Action for setting up Python.
      with:
        python-version: 'latest'  # Automatically installs the latest Python version available.

    - name: Install dependencies  # Install the necessary dependencies for the app.
      run: |
        python -m pip install --upgrade pip  # Upgrade pip.
        pip install flask  # Install Flask framework.
        pip install pytest  # Install pytest for testing.

    - name: Run tests  # Run the tests using pytest.
      run: |
        pytest  # Run the test suite using pytest.

  # Job for building the Docker image and publishing it to Docker Hub.
  build-and-publish:
    needs: build-and-test  # This job will only run after the "build-and-test" job completes successfully.
    runs-on: ubuntu-latest  # Specify the runner environment.

    steps:
    - name: Checkout code  # Checkout the code from the repository.
      uses: actions/checkout@v3  # Action for checking out code.
      
    - name: Set up Docker Buildx  # Set up Docker Buildx to build multi-platform images.
      uses: docker/setup-buildx-action@v2  # Action for setting up Docker Buildx.
      
    - name: Login to DockerHub  # Log in to Docker Hub using the provided credentials.
      uses: docker/login-action@v2  # Action for logging into Docker Hub.
      with:
        username: ${{ secrets.DOCKER_USERNAME }}  # Docker Hub username from secrets.
        password: ${{ secrets.DOCKER_PASSWORD }}  # Docker Hub password from secrets.

    - name: Build and push Docker image  # Build and push the Docker image to Docker Hub.
      uses: docker/build-push-action@v4  # Action for building and pushing Docker images.
      with:
        context: .  # Set the build context (the current directory).
        file: ./DockerFile  # Specify the path to the Dockerfile.
        push: true  # Push the image to Docker Hub after building.
        tags: ${{ secrets.DOCKER_USERNAME }}/flasktest-app:latest  # Tag the image with the username and latest tag.

    - name: Image digest  # Print the image digest to confirm the image has been built.
      run: echo ${{ steps.build-and-publish.outputs.digest }}  # Output the image digest.
